@using DataModels.VM.AircraftEquipment
@using DataModels.VM.Common
@using FSM.Blazor.Data.AircraftSchedule
@using FSM.Blazor.Data.Aircraft
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Schedule
@using System.Collections.ObjectModel
@using System.ComponentModel
@using DE = DataModels.Entities
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Calendars;
@using Syncfusion.Blazor.Buttons;
@using DataModels.VM.Scheduler;
@using Syncfusion.Blazor.Popups;
@using DataModels.Entities;
@using DataModels.VM;

@inject AircraftSchedulerService AircraftSchedulerService
@inject AircraftService AircraftService
@layout MainLayout
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService
@inject DialogService DialogService
@inject AircraftSchedulerDetailService AircraftSchedulerDetailService

@page "/Scheduler"

<style>
    .e-schedule .e-vertical-view .e-all-day-appointment-wrapper .e-appointment.scheduled,
    .e-schedule .e-vertical-view .e-day-wrapper .e-appointment.scheduled,
    .e-schedule .e-month-view .e-appointment.scheduled {
        background: #007bff;
    }

    .e-schedule .e-vertical-view .e-all-day-appointment-wrapper .e-appointment.checkedout,
    .e-schedule .e-vertical-view .e-day-wrapper .e-appointment.checkedout,
    .e-schedule .e-month-view .e-appointment.checkedout {
        background: #33ff81;
    }

    .e-schedule .e-vertical-view .e-all-day-appointment-wrapper .e-appointment.checkedin,
    .e-schedule .e-vertical-view .e-day-wrapper .e-appointment.checkedin,
    .e-schedule .e-month-view .e-appointment.checkedin {
        background: #B8B8B8;
    }
</style>

<PageTitle>Scheduler | Fly Manager </PageTitle>

<SfSchedule TValue="SchedulerVM" Height="800px" @ref="@ScheduleRef" ShowQuickInfo="false" @bind-SelectedDate="@currentDate">

    <ScheduleGroup EnableCompactView="false" Resources="@Resources"></ScheduleGroup>

    <ScheduleEventSettings DataSource="@DataSource" EnableTooltip="true">

        <ScheduleField Id="Id">
            <FieldSubject Name="DisplayTitle"></FieldSubject>
            <FieldStartTime Name="StartTime"></FieldStartTime>
            <FieldEndTime Name="EndTime"></FieldEndTime>
        </ScheduleField>

    </ScheduleEventSettings>
    <ScheduleEvents TValue="SchedulerVM" OnEventDoubleClick="OnEventClick" EventRendered="OnEventRendered"
                    OnCellDoubleClick="OpenCreateAppointmentDialog" OnCellClick="OpenCreateAppointmentDialog" OnEventClick="OnEventClick"></ScheduleEvents>

    <ScheduleResources>

        <ScheduleResource TItem="ResourceData" TValue="long[]" DataSource="@ObservableAircraftsData" Field="AircraftId" Title="Aircraft"
                          Name="Aircrafts" TextField="AircraftTailNo" IdField="Id" AllowMultiple="true">
        </ScheduleResource>

    </ScheduleResources>

    <ScheduleViews>
        <ScheduleView Option="View.Day"></ScheduleView>
        <ScheduleView Option="View.Week"></ScheduleView>
        <ScheduleView Option="View.WorkWeek"></ScheduleView>
        <ScheduleView Option="View.Month"></ScheduleView>
    </ScheduleViews>
</SfSchedule>

<SfDialog @bind-Visible="@dialogVisibility" IsModal="true" Width="575px" ShowCloseIcon="true">

    <DialogTemplates>
        <Header> <div>Schedule Appointment</div> </Header>
        <Content>

            @if (isDisplayMainForm)
            {

                <EditForm Model="schedulerVM" OnValidSubmit="@OnValidSubmit">

                    @if (isDisplayForm)
                    {
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <table class="custom-event-editor" width="100%" cellpadding="5">
                            <tbody>

                                <tr>
                                    <td class="e-textlabel">Display Title</td>
                                    <td colspan="4">

                                        <SfTextBox Placeholder="Enter Title" @bind-Value="schedulerVM.DisplayTitle">
                                        </SfTextBox>

                                        <ValidationMessage For="@(() => schedulerVM.DisplayTitle)" />
                                    </td>
                                </tr>

                                <tr>
                                    <td class="e-textlabel">Activity Type</td>
                                    <td colspan="4">

                                        <SfDropDownList TValue="int?" @bind-Value="schedulerVM.ScheduleActivityId" TItem="DropDownValues"
                                                Placeholder="Select Activity" DataSource="@schedulerVM.ScheduleActivitiesList" ShowClearButton="true">

                                            <DropDownListEvents TItem="DropDownValues" TValue="int?" ValueChange="@OnActivityTypeValueChanged"></DropDownListEvents>
                                            <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>

                                        </SfDropDownList>

                                        <ValidationMessage For="@(() => schedulerVM.ScheduleActivityId)" />

                                    </td>
                                </tr>

                                <tr>
                                    <td class="e-textlabel">Start Time</td>
                                    <td colspan="4">

                                        <SfDateTimePicker TValue="DateTime" Value="@schedulerVM.StartTime"></SfDateTimePicker>
                                        <ValidationMessage For="@(() => schedulerVM.StartTime)" />
                                    </td>
                                </tr>

                                <tr>
                                    <td class="e-textlabel">End Time</td>
                                    <td colspan="4">
                                        <SfDateTimePicker TValue="DateTime" Value="@schedulerVM.EndTime"></SfDateTimePicker>
                                        <ValidationMessage For="@(() => schedulerVM.EndTime)" />
                                    </td>
                                </tr>

                                @if (isDisplayAircraftDropDown)
                                {
                                    <tr>
                                        <td class="e-textlabel">Aircraft</td>
                                        <td colspan="4">

                                            <SfDropDownList TValue="long?" @bind-Value="schedulerVM.AircraftId" TItem="DropDownLargeValues" Placeholder="Select Aircraft" DataSource="@schedulerVM.AircraftsList">
                                                <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                            </SfDropDownList>

                                            <ValidationMessage For="@(() => schedulerVM.AircraftId)" />

                                        </td>
                                    </tr>
                                }

                                @if (schedulerVM.ScheduleActivityId > 0)
                                {
                                    @if (isDisplayRecurring)
                                    {
                                        <tr>
                                            <td class="e-textlabel">Recurring ?</td>
                                            <td colspan="4">

                                                <SfCheckBox TValue="bool" @bind-Checked="@schedulerVM.IsRecurring"></SfCheckBox>

                                            </td>
                                        </tr>
                                    }

                                    @if (isDisplayMember1Dropdown)
                                    {
                                        <tr>
                                            <td class="e-textlabel">Member 1</td>
                                            <td colspan="4">

                                                <SfDropDownList TValue="long?" TItem="DropDownLargeValues" @bind-Value="schedulerVM.Member1Id" Placeholder="Select Member 1" DataSource="@schedulerVM.Member1List">
                                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                                </SfDropDownList>

                                            </td>
                                        </tr>
                                    }

                                    @if (isDisplayMember2Dropdown)
                                    {
                                        <tr>
                                            <td class="e-textlabel">Member 2</td>
                                            <td colspan="4">

                                                <SfDropDownList TValue="long?" @bind-Value="schedulerVM.Member2Id" TItem="DropDownLargeValues" Placeholder="Select Member 2" DataSource="@schedulerVM.Member2List">
                                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                                </SfDropDownList>

                                            </td>
                                        </tr>

                                    }

                                    @if (isDisplayFlightInfo)
                                    {
                                        <tr>
                                            <td class="e-textlabel">Flight Type</td>
                                            <td colspan="4">

                                                <SfRadioButton Label="Local" Name="FlightType" Value="Local" @bind-Checked="@schedulerVM.FlightType"></SfRadioButton>
                                                <SfRadioButton Label="Cross Country" Name="FlightType" Value="Cross Country" @bind-Checked="@schedulerVM.FlightType"></SfRadioButton>

                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="e-textlabel">Flight Rules</td>
                                            <td colspan="4">

                                                <SfRadioButton Label="VFR" Name="FlightRules" Value="VFR" @bind-Checked="@schedulerVM.FlightRules"></SfRadioButton>
                                                <SfRadioButton Label="IFR" Name="FlightRules" Value="IFR" @bind-Checked="@schedulerVM.FlightRules"></SfRadioButton>

                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="e-textlabel">Est Hours</td>
                                            <td colspan="4">

                                                <SfTextBox Placeholder="Enter Hours" DataSource="@schedulerVM.EstHours" Type="InputType.Number">
                                                </SfTextBox>

                                            </td>
                                        </tr>

                                    }
                                    @if (isDisplayInstructor)
                                    {
                                        <tr>
                                            <td class="e-textlabel">Instructor</td>
                                            <td colspan="4">

                                                <SfDropDownList TValue="long?" @bind-Value="schedulerVM.InstructorId" TItem="DropDownLargeValues" Placeholder="Select Instructor" DataSource="@schedulerVM.InstructorsList">
                                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                                </SfDropDownList>

                                            </td>
                                        </tr>
                                    }

                                    @if (isDisplayFlightRoutes)
                                    {
                                        <tr>
                                            <td class="e-textlabel">Flight Routes</td>
                                            <td colspan="4">

                                                <SfTextBox Multiline=true Placeholder="Enter fligt routes" @bind-Value="@schedulerVM.FlightRoutes"></SfTextBox>
                                            </td>
                                        </tr>
                                    }

                                    <tr>
                                        <td class="e-textlabel">Comments</td>
                                        <td colspan="4">

                                            <SfTextBox Multiline=true Placeholder="Enter comments" @bind-Value="@schedulerVM.Comments"></SfTextBox>

                                        </td>
                                    </tr>

                                    <tr>
                                        <td class="e-textlabel">Internal Comments</td>
                                        <td colspan="4">

                                            <SfTextBox Multiline=true Placeholder="Enter internal comments" @bind-Value="@schedulerVM.InternalComments"></SfTextBox>

                                        </td>
                                    </tr>

                                }
                                @if (isDisplayStandBy)
                                {
                                    <tr>
                                        <td class="e-textlabel">StandBy</td>
                                        <td colspan="4">

                                            <SfCheckBox TValue="bool" @bind-Checked="@schedulerVM.IsStandBy"></SfCheckBox>

                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>

                        <div class="row" style="margin-top:4%">
                            <div class="col-md-12 text-right">
                                <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Continue" Style="width: 130px" />
                                <RadzenButton Click="@((args) => CloseDialog())" ButtonStyle="ButtonStyle.Secondary" Text="Cancel" Style="width: 120px" Class="mr-1" />
                            </div>
                        </div>
                    }

                    else
                    {
                        <div>
                            <label>
                                <h3>
                                    @schedulerVM.StartTime.ToString("MMM dd yyyy hh:mm tt")
                                    @schedulerVM.EndTime.ToString("MMM dd yyyy hh:mm tt")
                                </h3>
                            </label>
                        </div>

                        <div>
                            <label>Activity : @schedulerVM.ScheduleActivitiesList.Where(p => p.Id == @schedulerVM.ScheduleActivityId).First().Name </label>
                        </div>


                        <div>
                            <label>Aircraft : @schedulerVM.AircraftsList.Where(p => p.Id == @schedulerVM.AircraftId).First().Name </label>
                        </div>

                        <div>
                            <label>Title : @schedulerVM.DisplayTitle </label>
                        </div>

                        <div>
                            <label>

                                Reservation Id :
                                @if (schedulerVM.ReservationId != Guid.Empty)
                                {
                                    @schedulerVM.ReservationId
                                }

                            </label>
                        </div>

                        <div>
                            <label>

                                Member 1 :

                                @if (@schedulerVM.Member1Id != null)
                                {
                                    @schedulerVM.Member1List.Where(p=>p.Id == @schedulerVM.Member1Id).First().Name
                                }

                            </label>
                        </div>

                        <div>
                            <label>

                                Member 2 :

                                @if (@schedulerVM.Member2Id != null)
                                {
                                    @schedulerVM.Member2List.Where(p=>p.Id == @schedulerVM.Member2Id).First().Name
                                }

                            </label>
                        </div>

                        <div>
                            <label>

                                Instructor :

                                @if (@schedulerVM.InstructorId != null && @schedulerVM.InstructorsList.Where(p => p.Id == @schedulerVM.InstructorId).FirstOrDefault() != null)
                                {
                                    @schedulerVM.InstructorsList.Where(p=>p.Id == @schedulerVM.InstructorId).First().Name
                                }

                            </label>
                        </div>

                        <div>
                            <label>

                                Comments : @schedulerVM.Comments

                            </label>
                        </div>

                        <div>
                            <label>

                                Internal Comments : @schedulerVM.InternalComments

                            </label>
                        </div>


                        @if (isDisplayCheckOutOption)
                        {
                            if (isDisplayCheckInButton)
                            {
                                <RadzenButton ButtonStyle="ButtonStyle.Primary" Click="@((args) => CheckInAircraft())" BusyText="Checking In ..."
                              IsBusy="@isBusyCheckOutButton" Text="Check In" Style="width: 164px" />
                            }
                            else
                            {
                                <RadzenButton ButtonStyle="ButtonStyle.Primary" Click="@((args) => CheckOutAircraft())" BusyText="Checking Out ..."
                              IsBusy="@isBusyCheckOutButton" Text="Check Out" Style="width: 164px" />
                            }

                            <RadzenButton ButtonStyle="ButtonStyle.Secondary" Click="@((args) => OpenForm())" Text="Edit" Style="width: 164px" />
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Click="@((args) => OpenDeleteDialog())" Text="Delete" Style="width: 164px" />
                        }
                        else if (schedulerVM.AircraftSchedulerDetailsVM.CheckInTime != null)
                        {
                            <RadzenButton ButtonStyle="ButtonStyle.Secondary" Click="@((args) => OpenForm())" Text="Edit End Time" Style="width: 164px" />
                            <RadzenButton ButtonStyle="ButtonStyle.Secondary" Click="@((args) => OpenDeleteDialog())" Text="Edit Flight Hours" Style="width: 164px" />
                        }
                        else
                        {
                            <div class="row" style="margin-top:4%">
                                <div class="col-md-12 text-right">
                                    <RadzenButton ButtonType="Radzen.ButtonType.Submit" BusyText="Saving ..." IsBusy="@isBusy" Text="Save" Style="width: 130px" />
                                    <RadzenButton Click="@((args) => CloseDialog())" ButtonStyle="ButtonStyle.Secondary" Text="Cancel" Style="width: 120px" Class="mr-1" />
                                </div>
                            </div>
                        }
                    }

                    @if (schedulerVM.AircraftSchedulerDetailsVM.IsCheckOut || schedulerVM.AircraftSchedulerDetailsVM.CheckInTime != null)
                    {
                        <table style="width:100%;">
                            <thead>
                                <tr>
                                    <th>Meter</th>
                                    <th>Time Out</th>
                                    <th>Time In</th>
                                    <th>Total</th>
                                </tr>
                            </thead>

                            <tbody>

                                @foreach (AircraftEquipmentTimeVM aircraftEquipmentTime in schedulerVM.AircraftEquipmentsTimeList)
                                {
                                    <tr>
                                        <td>@aircraftEquipmentTime.EquipmentName</td>
                                        <td>@aircraftEquipmentTime.Hours</td>
                                        <td>-</td>
                                        <td>-</td>
                                    </tr>
                                }
                            </tbody>

                        </table>
                    }

                </EditForm>

                @if (!string.IsNullOrWhiteSpace(schedulerVM.AircraftSchedulerDetailsVM.CheckOutByUserName))
                {
                    <div>
                        <label>

                           <b>Checked Out :</b>  @schedulerVM.AircraftSchedulerDetailsVM.CheckOutByUserName

                        </label>
                    </div>
                }

                @if (!string.IsNullOrWhiteSpace(schedulerVM.AircraftSchedulerDetailsVM.CheckInByUserName))
                {
                    <div>
                        <label>

                            <b>Checked In :</b>  @schedulerVM.AircraftSchedulerDetailsVM.CheckInByUserName

                        </label>
                    </div>
                }
            }
            else
            {
                <EditForm Model="aircraftEquipmentTime" OnValidSubmit="@CheckIn">

                    <table class="custom-event-editor" width="100%" cellpadding="5">

                        <thead>

                            <tr>
                                <th>Meter</th>
                                <th>Time Out</th>
                                <th>Time In</th>
                                <th>Total</th>
                            </tr>


                        </thead>


                        <tbody>

                            @for (int index = 0; index < schedulerVM.AircraftEquipmentsTimeList.Count(); index++)
                            {
                                //  var textValue = value.Value;
                                int indexValue = index;

                                <tr>
                                    <td class="e-textlabel">@schedulerVM.AircraftEquipmentsTimeList[index].EquipmentName</td>
                                    <td>

                                        @schedulerVM.AircraftEquipmentsTimeList[index].Hours

                                    </td>

                                    <td>

                                        <SfTextBox Type="InputType.Number" Width="70%" Placeholder="Enter Hours" Id="@schedulerVM.AircraftEquipmentsTimeList[index].Hours.ToString()"
                                           ValueChange="((ChangedEventArgs args)=> TextBoxChangeEvent( args, indexValue))">
                                        </SfTextBox>

                                    </td>

                                    <td>

                                        @schedulerVM.AircraftEquipmentsTimeList[index].TotalHours

                                    </td>

                                </tr>
                            }

                        </tbody>

                    </table>

                    <div>
                        <div class="row" style="text-align:right">
                            <div class="col">
                                <RadzenButton Text="Check In" ButtonType="Radzen.ButtonType.Submit" ButtonStyle="ButtonStyle.Primary"
                                          BusyText="Checking In..." Class="mr-1" Style="width: 163px;" />

                                <RadzenButton Text="Cancel" Click="() => OpenMainForm()" ButtonStyle="ButtonStyle.Secondary" Class="mr-1" Style="width: 120px;" />
                            </div>
                        </div>
                    </div>

                </EditForm>
            }
        </Content>
    </DialogTemplates>

</SfDialog>

<SfDialog ID="DeleteDialog" Width="360px" MinHeight="150px" Target="Body" ShowCloseIcon="true" @bind-Visible="@isVisibleDeleteDialog">

    <DialogTemplates>

        <Header> Delete Appointment </Header>

        <Content>

            <div>
                <p class="mb-4">Are you sure, You want to delete appointment?</p>
                <div class="row" style="text-align:right">
                    <div class="col">
                        <RadzenButton Text="Yes" ButtonStyle="ButtonStyle.Primary" Click="() => DeleteAsync() " BusyText="Deleting ..." IsBusy=@isBusyDeleteButton Class="mr-1" Style="width: 80px;" />
                        <RadzenButton Text="No" Click="() => CloseDeleteDialog()" ButtonStyle="ButtonStyle.Secondary" Class="mr-1" Style="width: 80px;" />
                    </div>
                </div>
            </div>

        </Content>
    </DialogTemplates>
    <DialogPositionData X="center" Y="center"></DialogPositionData>
</SfDialog>

@{
    async Task OpenDeleteDialog()
    {
        dialogVisibility = false;
        var result = await DialogService.OpenAsync("Delete", ds =>
    @<div>
        <p class="mb-4">Are you sure, You want to delete appointment ?</p>
        <div class="row" style="text-align:right">
            <div class="col">
                <RadzenButton Text="Yes" ButtonStyle="ButtonStyle.Danger" Click="() => DeleteAsync() " BusyText="Deleting ..." IsBusy=@isBusyDeleteButton Class="mr-1" Style="width: 80px;" />
                <RadzenButton Text="No" Click="() => CloseDeleteDialog()" ButtonStyle="ButtonStyle.Secondary" Class="mr-1" Style="width: 80px;" />

            </div>
        </div>
    </div>
    , new DialogOptions { Width = "360px" });

    }
}