@namespace FSM.Blazor.Pages.SubscriptionPlan
@using DataModels.Enums
@using FSM.Blazor.Data.SubscriptionPlan
@using FSM.Blazor.Data.ModuleDetail
@using DataModels.VM.SubscriptionPlan
@using Configuration;
@using Syncfusion.Blazor;


@inject SubscriptionPlanService SubscriptionPlanService
@layout MainLayout
@inject DialogService DialogService
@inject NavigationManager NavManager
@inject ModuleDetailsService ModuleDetailsService

@page "/SubscriptionPlan"

<style>
    .card
    {
        background-color:#fff;
        color:#1a1a1a!important;
        margin-bottom:0;
        border-bottom-left-radius:0!important;
        border-bottom-right-radius:0!important;
        padding-bottom:0;
        height:auto!important;
        border-bottom:none!important;
        text-align:center;

    }
    .card-body
    {
        text-align:left;
        border-top-left-radius:0;
        border-top-right-radius:0;
        margin-bottom:0;
        padding-left:40px;
        margin-top:-20px;
    }
    </style>

<PageTitle>Subscription Plan | Fly Manager </PageTitle>

<div class="row mb-4">
    <div class="col">
        <h2 style="float:left">Manage Subscription Plans Details</h2>

        @if (_currentUserPermissionManager.IsAllowed(AuthStat, PermissionType.Create, @moduleName))
        {
            <RadzenButton Style="float:right" Text="Add New" IsBusy=@isBusyAddNewButton BusyText="Add New ..." Icon="add_circle_outline" ButtonStyle="ButtonStyle.Primary"
                      Click=@(() => SubscriptionPlanCreateDialog(0, "Create", true
                      )) />
        }
    </div>
</div>

<div class="row">

    <div class="col-md-4" style="padding-top:0.5%; margin: 8px 0px">
        <RadzenTextBox style="width: 100%;" Name="SearchText" Change="@(args =>  LoadData())"
                       Placeholder="Search Subscription Plan" @bind-Value="@searchText" />
    </div>

</div>

@if (data != null)
{
    <div class="row">
       
    @foreach (var item in data)
    {
                    <div class="col-md-4">

         <div class="card" style="width: 20rem;height:356.69px!important">

            <RadzenLabel Text="@item.Name" style="margin-top:5px;font-weight:700;font-size:18px;margin-bottom:.368421em!important"></RadzenLabel>
            <RadzenLabel Text="@("$ " + item.Price.ToString())" style="font-weight:600;font-size:30px;display:inline-block!important"></RadzenLabel>
            <RadzenLabel Text="@(item.Duration.ToString() + " Month(s)")" style="font-weight:500;font-size:16px;"></RadzenLabel>
            <br/>

            <div class="card-body">

                 <ul style="list-style-type:disc;">
                        
                 
                @foreach (var module in item.ModulesName.Split(","))
                {
                    <li>
                    <RadzenLabel Text="@module"></RadzenLabel>
                    </li>
                    
                    
                }
                <li>
                    <p>This is basic plan for 3 months with combo feature where oyu can get multiple modules in single package.</p>
                    </li>
                    </ul>
            </div>

            <div class="card-footer">

                @if (!_currentUserPermissionManager.IsValidUser(AuthStat, UserRole.SuperAdmin).Result)
                {

                    <RadzenButton ButtonStyle="ButtonStyle.Success" Style="margin-right:6px;margin-left:-9px" Text="Edit" IsBusy=@item.IsLoadingEditButton BusyText="Edit ..." Icon="mode_edit"
                      Click=@(() => SubscriptionPlanCreateDialog(item.Id, "Create", true)) />

                    <RadzenButton Text="Delete" Icon="delete_sweep" Style="margin-right:6px;" ButtonStyle="ButtonStyle.Danger"
                      Click=@(() => OpenDeleteDialog(item)) />

                    @if (item.IsActive)
                    {
                        <RadzenButton ButtonStyle="ButtonStyle.Warning" Text="Deactivate" Icon=""
                      Click=@(() => OpenUpdatePlanStatusDialog(false, item.Name,item.Id)) />
                    }
                    else
                    {
                        <RadzenButton ButtonStyle="ButtonStyle.Info" Text="Activate" Icon=""
                      Click=@(() => OpenUpdatePlanStatusDialog(true, item.Name ,item.Id)) />
                    }
                }
                else
                {
                     <RadzenButton ButtonStyle="ButtonStyle.Primary" Style="width:18rem;height:3rem;" Text="Buy Now" IsBusy=@item.IsLoadingEditButton BusyText="Buy ..." Icon="shopping_cart"
                      Click=@(() => SubscriptionPlanCreateDialog(item.Id, "Create", true)) />
                }
            </div>
        </div>
               </div>

    }
     </div>
}

@{
    async Task OpenDeleteDialog(SubscriptionPlanDataVM subscriptionPlanDataVM)
    {
        var result = await DialogService.OpenAsync("Delete", ds =>
    @<div>
        <p class="mb-4">Are you sure, You want to delete <b> @subscriptionPlanDataVM.Name </b>?</p>
        <div class="row" style="text-align:right">
            <div class="col">
                <RadzenButton Text="Yes" ButtonStyle="ButtonStyle.Danger" Click="() => DeleteAsync(subscriptionPlanDataVM.Id) " Class="mr-1" Style="width: 80px;" />
                <RadzenButton Text="No" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Secondary" Class="mr-1" Style="width: 80px;" />

            </div>
        </div>
    </div>
    , new DialogOptions { Width = "360px" });

    }

    async Task OpenUpdatePlanStatusDialog(bool value, string name, int id)
    {
        string message = "Are you sure, you want to activate ";
        string title = "Actiavate";

        if (value == false)
        {
            message = "Are you sure, you want to deactivate ";
            title = "Deactivate";
        }

        var result = await DialogService.OpenAsync(title, ds =>
    @<div>
        <p class="mb-4"> @message <b> @name </b>?</p>
        <div class="row" style="text-align:right">
            <div class="col">

                @if (_currentUserPermissionManager.IsAllowed(AuthStat, PermissionType.Edit, @moduleName))
                    {
                        <RadzenButton Text="Yes" ButtonStyle="ButtonStyle.Primary" Click="() =>
                        UpdateIsPlanActiveAsync(value,id) " Class="mr-1" Style="width: 80px;" IsBusy="@isBusyUpdateStatusButton" BusyText="Updating ..." />
                    }

                    @if (_currentUserPermissionManager.IsAllowed(AuthStat, PermissionType.Delete, @moduleName))
                    {
                        <RadzenButton Text="No" Click="() => ClosePplanStatusUpdateDialogAsync()" ButtonStyle="ButtonStyle.Secondary" Class="mr-1" Style="width: 80px;" />
                    }

                </div>
            </div>
        </div>
    , new DialogOptions { Width = "360px" });

    }
}