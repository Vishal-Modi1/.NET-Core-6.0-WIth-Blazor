@using FSM.Blazor.Extensions;
@using FSM.Blazor.Data.Company;

@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject IJSRuntime JSRuntime
@inject IHttpContextAccessor httpContextAccessor
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject CompanyService CompanyService

@inject DialogService DialogService

<PageTitle>FSM.Blazor</PageTitle>

<RadzenDialog />
<RadzenNotification />
<RadzenTooltip />
<RadzenContextMenu />

<RadzenLayout>

    <RadzenHeader>
        <ChildContent>
            <div class="row justify-content-start align-items-center">
                <div class="col-4 d-flex align-items-center">
                    <RadzenSidebarToggle Click="@(args => { sidebarExpanded = !sidebarExpanded; bodyExpanded = !bodyExpanded; })">
                    </RadzenSidebarToggle>
                    <RadzenLabel Text="@companyName">
                    </RadzenLabel>
                </div>

                <div class="col-4 d-flex align-items-center justify-content-center">
                    @if (!isSuperAdmin)
                    {
                        <RadzenButton Text="Change Company" Click=@(args => OpenChangeCompanyDailog())></RadzenButton>
                    }
                </div>

                <div class="col-4 d-flex align-items-center justify-content-end" style="margin-left:-25px;">
                    <RadzenMenu Click=@(args => ManageMenuClickEvent(args))>
                        <RadzenMenuItem Text="@userFullName" Icon="account_circle">
                            <RadzenMenuItem Text="My Profile" Path="/MyProfile" Icon="manage_accounts"></RadzenMenuItem>
                            <RadzenMenuItem Text="Change Password" Icon="vpn_key"></RadzenMenuItem>
                            <RadzenMenuItem Text="Log Out" Path="/logout" Icon="open_in_new"></RadzenMenuItem>
                        </RadzenMenuItem>
                    </RadzenMenu>
                </div>
            </div>
        </ChildContent>
    </RadzenHeader>

    <RadzenBody @bind-Expanded="@bodyExpanded">
        <ChildContent>
            <RadzenContentContainer Name="main">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12 pt-4 pb-5 px-2 px-lg-2">
                            <FSM.Blazor.Extensions.CustomErrorBoundry @ref="@errorBoundary"
                                                                      navigationManager="@NavigationManager" DialogService="@DialogService">
                                @Body
                            </FSM.Blazor.Extensions.CustomErrorBoundry>

                        </div>
                    </div>
                </div>
            </RadzenContentContainer>
        </ChildContent>
    </RadzenBody>

    <NavMenu Expanded="@sidebarExpanded" />

</RadzenLayout>

@if (isDisplayPopup)
{
    <CustomPopupComponent Title="@popupTitle"
                      HeaderCssClass=@CustomPopupComponent.GetHeaderCssClass(operationType)
                      CloseOnOutsideClick="false"
                      OnClose="@(()=> {isDisplayPopup = false;})">
        <Body>

            @if (operationType == OperationType.ChangePassword)
            {
                <FSM.Blazor.Pages.MyAccount.ChangePassword Id=@loggedUserId CloseDialogCallBack="@CloseDialog">
                </FSM.Blazor.Pages.MyAccount.ChangePassword>
            }
            else if (operationType == OperationType.ChangeCompany)
            {
                <FSM.Blazor.Pages.MyAccount.ChangeCompany Id=@loggedUserId CompanyId=@companyId CompanyList=@companyList CloseDialogCallBack="@CloseDialog">
                </FSM.Blazor.Pages.MyAccount.ChangeCompany>
            }

        </Body>
    </CustomPopupComponent>
}

@code {
    private ErrorBoundary errorBoundary;
    protected override void OnParametersSet()
    {
        //if(errorBoundary.CurrentException.Message == "Unauthorized")
        //{

        //    NavigationManager.NavigateTo("/Login");
        //}
        errorBoundary?.Recover();
    }
}