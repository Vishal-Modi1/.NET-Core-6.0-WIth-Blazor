@inherits LayoutComponentBase

<style>
    html, body, app, .k-drawer-container, .k-drawer-content, .main {
        width: 100%;
        height: 100%;
        max-height: 100%;
    }

    .main {
        overflow-y: auto;
    }

    .k-drawer-content {
        overflow-x: auto;
    }

    .top-row {
        left: 0;
    }

    .drawer-hamburger {
        position: absolute;
        z-index: 2;
    }

    /*    .k-drawer-item:hover, .k-drawer-item.k-state-hover, .text-info {
            color: whitesmoke !important;
            background-color: #ff6358;
        }*/

</style>

@if (menuItems != null)
{
    <TelerikDrawer Data="@menuItems"
               @bind-Expanded="@DrawerExpanded"
               MiniMode="true"
               Mode="@DrawerMode.Push"
               @ref="@DrawerRef"
               @bind-SelectedItem="@SelectedItem">
        <Template>
            @*<div class="k-d-flex-col k-align-items-center k-justify-content-evenly">
                <div class="drawer-expander">
                    <TelerikButton OnClick="@( () => DrawerRef.ToggleAsync() )" Icon="menu" Class="drawer-hamburger"></TelerikButton>
                </div>
            </div>*@
            <div class="d-flex align-items-center justify-content-start" style="height:54px;">
                <TelerikButton OnClick="@( () => DrawerRef.ToggleAsync() )" Icon="menu" Class="drawer-hamburger"></TelerikButton>
            </div>
            <hr class="hr-blue mt-0" />
            @if (DrawerExpanded)
            {
            <div class="k-d-flex k-align-items-center k-justify-content-evenly" style="height:118px;">
                <label class="d-flex flex-row user-face">
                    <img src='https://mir-s3-cdn-cf.behance.net/user/115/5a206b20984315.60746bc251979.jpg'
                     style="height: 54px;width: 54px;border-radius:50px" />
                    <div id="name"><strong>Jacksons Danniels </strong> (Super Admin)</div>
                </label>
            </div>
            }
            else
            {
            <div class="k-d-flex k-align-items-center k-justify-content-evenly" style="height:118px;">
                <label class="d-flex">
                    <img src='https://mir-s3-cdn-cf.behance.net/user/115/5a206b20984315.60746bc251979.jpg'
                     style="height: 44px;width: 44px;border-radius:50px" />
                    <div id="name">Admin</div>
                </label>
            </div>
            }
        <hr class="hr-blue" />
            <div class="k-drawer-items">
                <ul>

                    @foreach (var item in menuItems)
                    {
                    <li @onclick="@(() => NavigateToPage(item))"
                    @onclick:stopPropagation
                    class="k-drawer-item @(GetSelectedItemClass(item))" style="white-space:nowrap">
                        <span class="k-icon k-i-@item.FavIconStyle" style="margin-right: 8px;"></span>
                        @if (DrawerExpanded)
                            {
                            <div>
                                <div>@item.DisplayName</div>
                            </div>
                            }
                    </li>
                    }
            </ul>
        </div>
    </Template>
    <DrawerContent>
        <div class="main">
            @* <div class="top-row px-4">
            <NavLink href="/about" style="text-decoration: none; color: #424242">About</NavLink>
            <a href="https://docs.telerik.com/blazor-ui/introduction#support-options" style="text-decoration: none; color: #424242" target="_blank">Contacts</a>
            </div>*@
            <div class="content">
                <LeftHeader></LeftHeader>
                @Body
            </div>
        </div>
    </DrawerContent>
</TelerikDrawer>

}

@code {
    bool DrawerExpanded { get; set; } = true;
    //DrawerItem SelectedItem { get; set; }
    //TelerikDrawer<DrawerItem> DrawerRef { get; set; }

    List<DrawerItem> NavigablePages { get; set; } = new List<DrawerItem>
    {
            new DrawerItem { Text = "Dashboard1", Url = "/", Icon = "grid", IsSeparator = true },
            new DrawerItem { Text = "Performance & Sales", Url = "/performance-and-sales", Icon = "globe", IsSeparator = true },
            new DrawerItem { Text = "Products", Url = "/products", Icon = "aggregate-fields", IsSeparator = true },
            new DrawerItem { Text = "Settings", Url = "/settings", Icon = "gear" , IsSeparator = true}
    };

    //protected override void OnInitialized()
    //{
    //        string currPage = NavigationManager.Uri;
    //        DrawerItem ActivePage = NavigablePages.Where(p => p.Url.ToLowerInvariant() == GetCurrentPage().ToLowerInvariant()).FirstOrDefault();
    //        if (ActivePage != null)
    //        {
    //            SelectedItem = ActivePage;
    //        }

    //    base.OnInitialized();
    //}



    public string GetCurrentPage()
    {
        string uriWithoutQueryString = NavigationManager.Uri.Split("?")[0];
        string currPage = uriWithoutQueryString.Substring(Math.Min(NavigationManager.Uri.Length, NavigationManager.BaseUri.Length));
        return string.IsNullOrWhiteSpace(currPage) ? "/" : currPage;
    }



    public class DrawerItem
    {
        public string Text { get; set; }
        public string Url { get; set; }
        public string Icon { get; set; }
        public bool IsSeparator { get; set; }
    }

    async Task LogoutClick()
    {
    }
}
