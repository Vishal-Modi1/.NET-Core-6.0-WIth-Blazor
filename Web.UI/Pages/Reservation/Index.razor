@namespace Web.UI.Pages.Reservation
@using DataModels.Enums
@using DataModels.VM.Reservation
@using Configuration
@using Web.UI.Pages.Scheduler
@using Web.UI.Shared.Components;

@page "/Reservation"

@if (string.IsNullOrWhiteSpace(ParentModuleName))
{
    <PageTitle>Reservation | Fly Manager </PageTitle>
}

<div class="row">
    <div class="col-12 d-flex justify-content-between">
        <div>
            <ComponentTitle Title="Reservations" Type="AdministrationTitle" />
        </div>
        <div>
             
        </div>
    </div>
</div>
<div class="row my-2">
    <div class="col-md-3 my-1">
        <TelerikDatePicker @bind-Value="@startDate" OnChange="@OnStartDateChange"
                           Format="MM/dd/yyyy %h:mm tt" Placeholder="Select Start Date" Id="startDate">
        </TelerikDatePicker>
    </div>
    <div class="col-md-3 my-1">
        <TelerikDatePicker @bind-Value="@endDate" OnChange="@OnEndDateChange"
                           Format="MM/dd/yyyy %h:mm tt" Id="endDate" Placeholder="Select End Date">
        </TelerikDatePicker>
    </div>
    @if (isSuperAdmin && ParentModuleName != Module.Company.ToString())
    {
        <div class="col-md-3 my-1">

            <TelerikComboBox Id=companyId Data="@reservationFilterVM.Companies" TextField="Name"
                         Filterable="true" FilterOperator="@StringFilterOperator.Contains"
                         Placeholder="Select Company" ValueField="Id"
                         Value="@reservationFilterVM.CompanyId"
                         ValueExpression="@( () => reservationFilterVM.CompanyId )"
                         ValueChanged="@( (int value) => GetUsersList(value) )">
            </TelerikComboBox>

        </div>

        <div class="col-md-3 my-1">
            <TelerikComboBox Id=userId Data="@reservationFilterVM.Users" TextField="Name"
                         Filterable="true" FilterOperator="@StringFilterOperator.Contains"
                         Placeholder="Select User" ValueField="Id"
                         @bind-Value="@reservationFilterVM.UserId"
                         OnChange="() => grid.Rebind()">
            </TelerikComboBox>
        </div>
    }

    @if (AircraftId == null)
    {
        <div class="col-md-3 my-1">

            <TelerikComboBox Id=aircraftId Data="@reservationFilterVM.Aircrafts" TextField="Name"
                         Filterable="true" FilterOperator="@StringFilterOperator.Contains"
                         Placeholder="Select Aircraft" ValueField="Id"
                         @bind-Value="@reservationFilterVM.AircraftId"
                         OnChange="() => grid.Rebind()">
            </TelerikComboBox>

        </div>
    }
    <div class="col-md-3 my-1">

        <TelerikTextBox Name="SearchText" OnChange="() => grid.Rebind()" PlaceHolder="Search Reservation"
                        ValueChanged="@( (string value) => OnSearchValueChanges<ReservationDataVM>(value, grid) )" />

    </div>

    <div class="col-md-3 my-1">

        <TelerikComboBox Id=reservationType Data="@reservationTypeFilter" TextField="Name"
                         Filterable="true" FilterOperator="@StringFilterOperator.Contains"
                         Placeholder="Select Reservation Type" ValueField="Id"
                         @bind-Value="@reservationFilterTypeId"
                         OnChange="() => grid.Rebind()">
        </TelerikComboBox>

    </div>
</div>
 
<TelerikGrid TItem="ReservationDataVM" OnRead="@LoadData" Pageable="true" @ref="@grid"
             Sortable="true" PageSize="@pageSize" PageSizeChanged="@PageSizeChangedHandler">

    <GridSettings>
        <Web.UI.Shared.Components.TelerikGridPager.TelerikGridPagerComponent></Web.UI.Shared.Components.TelerikGridPager.TelerikGridPagerComponent>
    </GridSettings>

    <GridColumns>

        <GridColumn Field="@nameof(ReservationDataVM.ScheduleTitle)" Title="Title" Sortable="true" />

        @if (AircraftId.GetValueOrDefault() == 0)
        {
            <GridColumn Field="@nameof(ReservationDataVM.TailNo)" Title="Aircraft" />
        }

        <GridCommandColumn Context="dataItem" Title="From">
            @{
                ReservationDataVM value = dataItem as ReservationDataVM;
                <label> @value.StartDateTime.ToString("ddd, dd MMM yyyy HH:mm")</label>
            }

        </GridCommandColumn>

        <GridCommandColumn Context="dataItem" Title="To">
            @{
                ReservationDataVM value = dataItem as ReservationDataVM;
                <GridColumn Field="@nameof(ReservationDataVM.ScheduleTitle)" Title="Title" Sortable="true" />

                <label> @value.EndDateTime.ToString("ddd, dd MMM yyyy HH:mm")</label>
            }

        </GridCommandColumn>

        <GridCommandColumn Context="dataItem" Title="Flight Hours">
            @{
                ReservationDataVM value = dataItem as ReservationDataVM;
                <label>  @value.AirFrameTime.GetValueOrDefault() </label>
            }

        </GridCommandColumn>

        <GridCommandColumn Context="dataItem" Title="Flight Status">
            @{
                ReservationDataVM value = dataItem as ReservationDataVM;
            }

            @if (string.IsNullOrWhiteSpace(value.FlightStatus))
            {
                <label>Scheduled</label>
            }
            else if (value.FlightStatus == "CheckedOut" && value.IsCheckOut.GetValueOrDefault() == true)
            {
                <label>Checked Out</label>
            }
            else
            {
                <label>Checked In</label>
            }

        </GridCommandColumn>


        <GridCommandColumn Context="dataItem" Title="Action">
            @{
                ReservationDataVM value = dataItem as ReservationDataVM;

                <TelerikButton Class="btn k-btn-primary mx-1" ThemeColor="primary" OnClick="()=>OpenSchedulerDialog(value)" Enabled="@(!value.IsButtonLoading)">
                  <CustomIcons IconName="view" PrimaryColor="White"></CustomIcons> 
                    <TelerikLoader Class="loader-indicator" ThemeColor="light" Visible="@value.IsButtonLoading">
                    </TelerikLoader>

                </TelerikButton>
            }
        </GridCommandColumn>

    </GridColumns>

</TelerikGrid>

@if (isDisplayPopup)
{
    <CustomPopupComponent Title="@popupTitle"
                      IsModalLg="true"
                      HeaderCssClass=@CustomPopupComponent.GetHeaderCssClass(operationType)
                      CloseOnOutsideClick="false"
                      OnClose="@(()=> {isDisplayPopup = false;})">

        <Body>
            <Create schedulerVM="@schedulerVM" uiOptions="@uiOptions"
                InitializeValuesParentEvent="@InitializeValues"
                OpenDialogParentEvent="@OpenDialog" DeleteParentEvent="@DeleteEventAsync"
                RefreshSchedulerDataSourceParentEvent="@RefreshSchedulerDataSourceAsync"
                CloseDialogParentEvent="@CloseDialog" LoadDataParentEvent="@ReloadData"></Create>

        </Body>

    </CustomPopupComponent>
}
