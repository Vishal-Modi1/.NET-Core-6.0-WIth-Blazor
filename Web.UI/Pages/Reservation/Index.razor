@*@namespace Web.UI.Pages.Reservation
@using DataModels.Enums
@using DataModels.VM.Reservation
@using Configuration;

@layout TelerikLayout

@page "/Reservation"

@if (string.IsNullOrWhiteSpace(ParentModuleName))
{
    <PageTitle>Reservation | Fly Manager </PageTitle>
}

<style>
    .e-dialog {
        max-height: 588px !important;
    }

</style>


<div class="row">
    <div class="col">
        <h2 style="float:left">Reservations</h2>
    </div>
</div>

<div class="row" style="margin-bottom:22px;">

        <div class="col-md-4">

        <RadzenDatePicker TValue="DateTime?" Name="StartDate" AllowClear="true"
                          @bind-Value="@startDate" Placeholder="Select Start Date"
                          Change=@(args => OnStartDateChange(args))
                          DateFormat="dd/MM/yyyy" Style="width:49.5%" />

        <RadzenDatePicker TValue="DateTime?" Name="EndDate" AllowClear="true"
                          @bind-Value="@endDate" Placeholder="Select End Date"
                          Change=@(args => OnEndDateChange(args))
                          DateFormat="dd/MM/yyyy" Style="width:49.5%"/>
    </div>

    @if (isSuperAdmin && ParentModuleName != Module.Company.ToString())
    {
        <div class="col-md-4">
            <RadzenDropDown @bind-Value="@reservationFilterVM.CompanyId" TValue="int"
                        TextProperty="Name" Placeholder="Select Company" style="width: 100%;"
                        Data="@reservationFilterVM.Companies" Change="@(args =>  GetUsersList())"
                        Name="CompanyId" ValueProperty="Id" AllowClear="true">
            </RadzenDropDown>
        </div>
    }

    <div class="col-md-4">
        <RadzenDropDown @bind-Value="@reservationFilterVM.UserId" TValue="long"
                        TextProperty="Name" Placeholder="Select User" style="width: 100%;"
                        Data="@reservationFilterVM.Users" Change="@(args =>  grid.Reload())"
                        Name="UserId" ValueProperty="Id" AllowClear="true">
        </RadzenDropDown>
    </div>

    @if (AircraftId == null)
    {
        <div class="col-md-4">
            <RadzenDropDown @bind-Value="@reservationFilterVM.AircraftId" TValue="long"
                        TextProperty="Name" Placeholder="Select Aircraft" style="width: 100%;"
                        Data="@reservationFilterVM.Aircrafts" Change="@(args =>  grid.Reload())"
                        Name="AircraftId" ValueProperty="Id" AllowClear="true">
            </RadzenDropDown>
      </div>
    }

    <div class="col-md-4">
        <RadzenTextBox style="width: 100%;" Name="SearchText" Change="@(args =>  grid.Reload())"
                       Placeholder="Search Reservation" AllowClear="true" @bind-Value="@searchText" />
    </div>

    <div class="col-md-4">
        <RadzenDropDown @bind-Value="@reservationFilterTypeId" TValue="int"
                        TextProperty="Name" Placeholder="Select Reservation Type" style="width: 100%;"
                        Data="@ReservationTypeFilter" Change="@(args =>  grid.Reload())"
                        Name="ReservationType" ValueProperty="Id" AllowClear="true">
        </RadzenDropDown>
    </div>

</div>

<RadzenDataGrid AllowFiltering="true" @ref="grid" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                FilterMode="FilterMode.Simple" AllowPaging="true" IsLoading="@isLoading"
                PageSize="@pageSize"
                AllowSorting="true" Data="@data" TItem="ReservationDataVM"
                PageSizeOptions="@pageSizeOptions"
                Count="@count" LoadData="@LoadData" ShowPagingSummary="true"
                PagingSummaryFormat="@pagingSummaryFormat">
    <Columns>

        <RadzenDataGridColumn Width="50px" TItem="ReservationDataVM" Title="#" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">
            <Template Context="value">
                @(data.IndexOf(value) + 1)
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="ReservationDataVM" Property="ScheduleTitle" Filterable="false" Title="Title"></RadzenDataGridColumn>

        @if (AircraftId.GetValueOrDefault() == 0)
        {
            <RadzenDataGridColumn TItem="ReservationDataVM" Property="TailNo" Filterable="false" Title="Aircraft"></RadzenDataGridColumn>
        }

        <RadzenDataGridColumn TItem="ReservationDataVM" Property="AirFrameTime" Filterable="false" Title="From">
            <Template Context="value">

                @value.StartDateTime.ToString("ddd, dd MMM yyyy HH:mm")

            </Template>
        </RadzenDataGridColumn>


        <RadzenDataGridColumn TItem="ReservationDataVM" Property="EndDateTime" Filterable="false" Title="To">
            <Template Context="value">

                @value.EndDateTime.ToString("ddd, dd MMM yyyy HH:mm")

            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn Width="90px" TItem="ReservationDataVM" Property="AirFrameTime" Filterable="false" Title="Flight Hours" TextAlign="TextAlign.Center">
            <Template Context="value">

                @value.AirFrameTime.GetValueOrDefault()

            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="ReservationDataVM" Property="FlightStatus" Filterable="false" Title="FlightStatus" TextAlign="TextAlign.Center">
            <Template Context="value">

                @if (string.IsNullOrWhiteSpace(value.FlightStatus))
                {
                    <RadzenBadge BadgeStyle="BadgeStyle.Primary" Text="Scheduled" Style="width:88px;" />
                }
                else if (value.FlightStatus == "CheckedOut" && value.IsCheckOut.GetValueOrDefault() == true)
                {
                    <RadzenBadge BadgeStyle="BadgeStyle.Success" Text="Checked Out" Style="width:88px;" />
                }
                else
                {
                    <RadzenBadge BadgeStyle="BadgeStyle.Light" Text="Checked In" Style="width:88px;" />
                }

            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TextAlign="TextAlign.Center" Sortable="false" Filterable="false" TItem="ReservationDataVM" Property="Id" Title="Actions">
            <Template Context="data">

                <RadzenButton Text="View" ButtonStyle="ButtonStyle.Primary" Click="@((args) => OpenSchedulerDialog(data.Id))">
                </RadzenButton>

            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>


<SfDialog @bind-Visible="@uiOptions.dialogVisibility" AllowDragging="true" IsModal="true" Width="624px" ShowCloseIcon="true">

    <DialogTemplates>
        <Header> <h5>Schedule Appointment</h5> </Header>
        <Content>

            <Create schedulerVM="@schedulerVM" uiOptions="@uiOptions"
                    InitializeValuesParentEvent="@InitializeValues"
                    OpenDialogParentEvent="@OpenDialog" DeleteParentEvent="@DeleteEventAsync"
                    RefreshSchedulerDataSourceParentEvent="@RefreshSchedulerDataSourceAsync"
                    CloseDialogParentEvent="@CloseDialog" LoadDataParentEvent="@LoadDataAsync"></Create>

        </Content>
    </DialogTemplates>

</SfDialog>
*@