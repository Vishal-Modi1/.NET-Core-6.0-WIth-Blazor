@namespace Web.UI.Pages.Reservation
@using DataModels.Enums
@using DataModels.VM.Reservation
@using Configuration
@using Web.UI.Pages.Scheduler
@using Web.UI.Shared.Components;

@page "/Reservation"

@if (string.IsNullOrWhiteSpace(ParentModuleName))
{
    <PageTitle>Reservation | Upflyte </PageTitle>
}

<div class="@(string.IsNullOrWhiteSpace(ParentModuleName) ? "" : "")">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between">
                <div>
                    <ComponentTitle Title="Reservations" Type="AdministrationTitle" />
                </div>
                <div>
                    @if (_currentUserPermissionManager.IsAllowed(AuthStat, PermissionType.Create, moduleName) || true)
                    {
                        <div class="col-md-4">
                            <TelerikButton Class="btn k-btn-primary" ThemeColor="primary" OnClick="() => OpenCreateScheduleDialogAsync()" Enabled="@(!isBusyAddButton)">
                                <CustomIcons IconName="add" PrimaryColor="White"></CustomIcons> Add
                                <TelerikLoader Class="button-loader-indicator" Size="sm" ThemeColor="light" Visible="@isBusyAddButton">
                                </TelerikLoader>
                            </TelerikButton>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div>
        <CustomCollapseBar Class="my-1" IsFilterBarVisible="isFilterBarVisible"
                           OnPanelCollapsed="@(() => {isFilterBarVisible = false;})"
                           OnPanelExpanded="@(() => {isFilterBarVisible = true;})">
            <HeaderContent>
                <div class="d-flex justify-content-between">
                    <span class="my-0">
                        <CustomIcons IconName="search" /> Search
                    </span>
                    <span>
                        @if (isFilterBarVisible)
                        {
                            <CustomIcons IconName="minus" />
                        }
                        else
                        {
                            <CustomIcons IconName="plus" />
                        }
                    </span>
                </div>
            </HeaderContent>
            <ChildContent>
                <div class="row my-2">
                    <div class="col-md-3 my-1">
                        <TelerikDatePicker @bind-Value="@startDate" OnChange="@OnStartDateChange" Class="common-bg"
                                           Format="MM/dd/yyyy" Placeholder="Select Start Date" Id="startDate">
                        </TelerikDatePicker>
                    </div>
                    <div class="col-md-3 my-1">
                        <TelerikDatePicker @bind-Value="@endDate" OnChange="@OnEndDateChange" Class="common-bg"
                                           Format="MM/dd/yyyy" Id="endDate" Placeholder="Select End Date">
                        </TelerikDatePicker>
                    </div>
                    @if (globalMembers.IsSuperAdmin && ParentModuleName != Module.Company.ToString())
                    {
                        <div class="col-md-3 my-1">

                            <TelerikComboBox Id=companyId Data="@reservationFilterVM.Companies" TextField="Name" Class="common-bg"
                                         Filterable="true" FilterOperator="@StringFilterOperator.Contains"
                                         Placeholder="Select Company" ValueField="Id"
                                         Value="@reservationFilterVM.CompanyId"
                                         ValueExpression="@( () => reservationFilterVM.CompanyId )"
                                         ValueChanged="@( (int value) => GetUsersList(value) )">
                            </TelerikComboBox>

                        </div>

                        <div class="col-md-3 my-1">
                            <TelerikComboBox Id=userId Data="@reservationFilterVM.Users" TextField="Name" Class="common-bg"
                                         Filterable="true" FilterOperator="@StringFilterOperator.Contains"
                                         Placeholder="Select User" ValueField="Id"
                                         @bind-Value="@reservationFilterVM.UserId"
                                         OnChange="() => grid.Rebind()">
                            </TelerikComboBox>
                        </div>
                    }

                    @if (AircraftId == null)
                    {
                        <div class="col-md-3 my-1">

                            <TelerikComboBox Id=aircraftId Data="@reservationFilterVM.Aircrafts" TextField="Name" Class="common-bg"
                                         Filterable="true" FilterOperator="@StringFilterOperator.Contains"
                                         Placeholder="Select Aircraft" ValueField="Id"
                                         @bind-Value="@reservationFilterVM.AircraftId"
                                         OnChange="() => grid.Rebind()">
                            </TelerikComboBox>

                        </div>
                    }
                    <div class="col-md-3 my-1">

                        <TelerikTextBox Name="SearchText" OnChange="() => grid.Rebind()" PlaceHolder="Search Reservation" Class="common-bg"
                                        ValueChanged="@( (string value) => OnSearchValueChanges<ReservationDataVM>(value, grid) )" />

                    </div>

                    <div class="col-md-3 my-1">

                        <TelerikComboBox Id=reservationType Data="@reservationTypeFilter" TextField="Name" Class="common-bg"
                                         Filterable="true" FilterOperator="@StringFilterOperator.Contains"
                                         Placeholder="Select Reservation Type" ValueField="Id"
                                         @bind-Value="@reservationFilterTypeId"
                                         OnChange="() => grid.Rebind()">
                        </TelerikComboBox>

                    </div>

                    <div class="col-md-3 my-1">

                        <TelerikComboBox Id=departureAirport Data="@reservationFilterVM.DepartureAirportsList" TextField="Name" Class="common-bg"
                                         Filterable="true" FilterOperator="@StringFilterOperator.Contains"
                                         Placeholder="Select Departure Airport" ValueField="Id"
                                         @bind-Value="@reservationFilterVM.DepartureAirportId"
                                         OnChange="() => grid.Rebind()">
                        </TelerikComboBox>

                    </div>

                    <div class="col-md-3 my-1">

                        <TelerikComboBox Id=arrivalAirport Data="@reservationFilterVM.ArrivalAirportsList" TextField="Name" Class="common-bg"
                                         Filterable="true" FilterOperator="@StringFilterOperator.Contains"
                                         Placeholder="Select Arrival Airport" ValueField="Id"
                                         @bind-Value="@reservationFilterVM.ArrivalAirportId"
                                         OnChange="() => grid.Rebind()">
                        </TelerikComboBox>

                    </div>

                    @if (!globalMembers.IsSuperAdmin)
                    {
                        <div class="col-md-3 my-1">

                            <TelerikCheckBox Id="myFlights"
                                     Value="@isDisplayMyFlightsOnly"
                                     ValueChanged="@((bool value) => DisplayMyFlights(value))">
                            </TelerikCheckBox>

                            <label for="activePilotDisplay">My Flights</label>
                        
                        </div>
                    }

                </div>
            </ChildContent>
        </CustomCollapseBar>
    </div>
    <TelerikGrid TItem="ReservationDataVM" OnRead="@LoadData" Pageable="true" @ref="@grid"
                 Sortable="true" PageSize="@pageSize" PageSizeChanged="@PageSizeChangedHandler">

        <GridSettings>
            <Web.UI.Shared.Components.TelerikGridPager.TelerikGridPagerComponent></Web.UI.Shared.Components.TelerikGridPager.TelerikGridPagerComponent>
        </GridSettings>

        <GridColumns>

            <GridColumn Field="@nameof(ReservationDataVM.ScheduleTitle)" Title="Title" Sortable="true" />

            @if (AircraftId.GetValueOrDefault() == 0)
            {
                <GridColumn Field="@nameof(ReservationDataVM.TailNo)" Title="Aircraft" />
            }
            <GridColumn Field="@nameof(ReservationDataVM.Member1)" Title="Booked By" Context="dataItem">
                <Template>

                    @{
                        ReservationDataVM value = dataItem as ReservationDataVM;

                        if (value.IsAllowToCheckDetails)
                        {
                            <label> @value.Member1</label>
                        }
                        else
                        {
                            <lable>-</lable>
                        }
                    }

                </Template>
            </GridColumn>

            <GridColumn Field="@nameof(ReservationDataVM.CompanyName)" Title="Company" Visible="@(globalMembers.IsSuperAdmin && ParentModuleName != "Company")"></GridColumn>

            <GridColumn Field="@nameof(ReservationDataVM.StartDateTime)" Context="dataItem" Title="From">
                <Template>

                    @{
                        ReservationDataVM value = dataItem as ReservationDataVM;
                        <label> @value.StartDateTime.ToString("ddd, dd MMM yyyy HH:mm")</label>
                    }

                </Template>
            </GridColumn>

            <GridColumn Field="@nameof(ReservationDataVM.EndDateTime)" Context="dataItem" Title="To">

                <Template>

                    @{
                        ReservationDataVM value = dataItem as ReservationDataVM;
                        <label> @value.EndDateTime.ToString("ddd, dd MMM yyyy HH:mm")</label>
                    }

                </Template>

            </GridColumn>

            <GridColumn Field="@nameof(ReservationDataVM.AirFrameTime)" Context="dataItem" Title="Flight Hours" TextAlign="@ColumnTextAlign.Center">
                <Template>

                    @{
                        ReservationDataVM value = dataItem as ReservationDataVM;
                        <label> @value.AirFrameTime.GetValueOrDefault() </label>
                    }

                </Template>

            </GridColumn>

            <GridColumn Field="@nameof(ReservationDataVM.FlightStatus)" Context="dataItem" Title="Flight Status" TextAlign="@ColumnTextAlign.Center">
                <Template>

                    @{
                        ReservationDataVM value = dataItem as ReservationDataVM;
                    }

                    @if (string.IsNullOrWhiteSpace(value.FlightStatus))
                    {
                        <span class="btn btn-primary customBadge" style="background-color: #0d6efd;">Scheduled</span>
                    }
                    else if (value.FlightStatus == "CheckedOut" && value.IsCheckOut.GetValueOrDefault() == true)
                    {
                        <span class="btn btn-success customBadge" style="background-color: #198754;">Checked Out</span>
                    }
                    else
                    {
                        <span class="btn btn-secondary customBadge">Checked In</span>
                    }

                </Template>
            </GridColumn>


            <GridCommandColumn Context="dataItem" Title="Action">
                @{
                    ReservationDataVM value = dataItem as ReservationDataVM;

                    <TelerikButton Class="btn k-btn-primary mx-1" ThemeColor="primary" OnClick="()=>OpenSchedulerDialog(value)"
                               Enabled="@(!value.IsButtonLoading && value.IsAllowToCheckDetails)">
                        <CustomIcons IconName="view" PrimaryColor="White"></CustomIcons>
                        <TelerikLoader Class="button-loader-indicator" ThemeColor="light" Visible="@value.IsButtonLoading">
                        </TelerikLoader>

                    </TelerikButton>
                }
            </GridCommandColumn>

        </GridColumns>

    </TelerikGrid>
</div>



@if (isDisplayPopup)
{
    <CustomPopupComponent Title="@popupTitle"
                      HeaderCssClass=@CustomPopupComponent.GetHeaderCssClass(operationType)
                      CloseOnOutsideClick="false"
                      OnClose="@(()=> {isDisplayPopup = false;})">

        <Body>
            <Create schedulerVM="@schedulerVM" uiOptions="@uiOptions"
                InitializeValuesParentEvent="@InitializeValues"
                OpenDialogParentEvent="@OpenDialog" DeleteParentEvent="@DeleteEventAsync"
                RefreshSchedulerDataSourceParentEvent="@RefreshSchedulerDataSourceAsync"
                CloseDialogParentEvent="@CloseDialog" LoadDataParentEvent="@ReloadData"></Create>

        </Body>

    </CustomPopupComponent>
}

<style>
    .customBadge {
        height: 29px;
        border-radius: 5px;
        font-size: 12px !important;
        padding-top: 5px !important;
    }
</style>