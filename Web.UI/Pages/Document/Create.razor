@using DataModels.VM.Document
@using DataModels.Enums
@using DataModels.VM.Common;
@using DataModels.Constants;

<TelerikForm Model="@documentData" EditContext="@editContext" OnValidSubmit="@UploadFilesAsync">

    <FormValidation>
        <DataAnnotationsValidator></DataAnnotationsValidator>
    </FormValidation>

    <FormItems>
        <div class="row">
            <input type="hidden" value="@documentData.Id" name="Id" />
            <div class="col-12">
                <div class="row">
                    <div class="col-6">
                        <label>Upload</label>

                        <div image-container>
                            <style>
                                .drag-area {
                                    width: 100%;
                                    height: 106px;
                                    background: #F8F8F8;
                                    border: 0.5px dashed #606060;
                                    border-radius: 8px;
                                }

                                .icon > svg {
                                    width: 30;
                                    height: 30;
                                }

                                .header {
                                    font-style: normal;
                                    font-weight: 300;
                                    font-size: 12px;
                                }
                            </style>
                            <label class="drag-area d-flex align-items-center k-cursor-pointer" for="aircraftImage">
                                <div class="text-center mx-auto">
                                    <div class="icon"><CustomIcons IconName="upload-cloud" /></div>
                                    <header class="header">Drag and drop or <br /> browse to choose images</header>
                                </div>
                            </label>
                            <InputFile Id="documentImage" style="display:none" OnChange="OnInputFileChangeAsync" Value="@documentData.DisplayName" accept="@supportedDocumentsFormat" />
                        </div>
                        @if (isFileUploadHasError)
                        {
                            <span style="color:red !important">@errorMessage</span>
                        }
                    </div>
                    <div class="col-6">
                        <label>Document Name</label>
                        <TelerikTextBox Id="displayName" @bind-Value="@documentData.DisplayName" PlaceHolder="Display Name"></TelerikTextBox>
                        <TelerikValidationMessage For="@(() => documentData.DisplayName)"></TelerikValidationMessage>
                    </div>
                    <div class="col-6">
                        <label>Document Tag</label>
                        <TelerikMultiSelect @ref="@autoComplete" Data="@documentData.DocumentTagsList"
                                            @bind-Value="@values" AutoClose="false" Placeholder="Search a tag..." TextField="TagName" ValueField="Id" />
                        <TelerikButton ButtonType="@ButtonType.Button" OnClick=@(args => OpenCreateTagDialogAsync())
                                       Class="btn k-btn-primary" ThemeColor="primary">
                            <CustomIcons IconName="add" PrimaryColor="White"></CustomIcons>
                        </TelerikButton>
                    </div>

                    @if (_currentUserPermissionManager.IsValidUser(AuthStat, UserRole.SuperAdmin).Result)
                    {
                        <div class="col-6">
                            <label>Company</label>
                            <TelerikComboBox Id=companyId Data="@documentData.CompniesList" TextField="Name"
                                         Filterable="true" FilterOperator="@StringFilterOperator.Contains"
                                         Placeholder="Select Company" ValueField="Id"
                                         Value="@documentData.CompanyId"
                                         ValueExpression="@( () => documentData.CompanyId )"
                                         ValueChanged="@( (int value) => OnChange(value) )">
                            </TelerikComboBox>

                            <TelerikValidationMessage For="@(() => documentData.CompanyId)"></TelerikValidationMessage>
                        </div>
                    }

                    @if (_currentUserPermissionManager.IsValidUser(AuthStat, UserRole.SuperAdmin).Result || _currentUserPermissionManager.IsValidUser(AuthStat, UserRole.Admin).Result)
                    {
                        <div class="col-6">
                            <label>User</label>
                            <TelerikComboBox Id=userId Data="@documentData.UsersList" TextField="Name"
                                         Filterable="true" FilterOperator="@StringFilterOperator.Contains"
                                         Placeholder="Select User" ValueField="Id" @bind-Value="@(documentData.UserId)">
                            </TelerikComboBox>

                            <TelerikValidationMessage For="@(() => documentData.UserId)"></TelerikValidationMessage>
                        </div>

                    }
                    @if (!documentData.IsFromParentModule)
                    {
                        <div class="col-6">
                            <label>Document Type</label>
                            <TelerikComboBox Id=documentType Data="@documentData.ModulesList" TextField="Name"
                                         Filterable="true" FilterOperator="@StringFilterOperator.Contains"
                                         Placeholder="Select Module" ValueField="Id" @bind-Value="@(documentData.ModuleId)">
                            </TelerikComboBox>

                            <TelerikValidationMessage For="@(() => documentData.ModuleId)"></TelerikValidationMessage>
                        </div>
                    }
                            <div class="col-6">
                                <div class="row">
                                    <div class="col-12">
                                        <label>Is Shareable</label>
                                        <div>
                                             <TelerikSwitch Id="isShareable" @bind-Value=@documentData.IsShareable />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @if (documentData.IsShareable)
                            {
                                <div class="col-6">
                                    <div class="row">
                                        <div class="col-12">
                                            <label for="lastShareDate" >Last Share Date</label>
                                            <div>
                                                <TelerikDatePicker @bind-Value="@documentData.LastShareDate" Id="lastShareDate"></TelerikDatePicker>
                                                <TelerikValidationMessage For="@(() => documentData.LastShareDate)"></TelerikValidationMessage>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="col-6">
                                <div class="row">
                                    <div class="col-12">
                                        <label>Expiration Date</label>
                                        <div>
                                            <TelerikDatePicker @bind-Value="@documentData.ExpirationDate" Id="expirationDate"></TelerikDatePicker>
                                        </div>
                                    </div>
                                </div>
                            </div>
                </div>
                

            </div>
        </div>
        <hr class="hr-gray mt-3 mb-3" />
    </FormItems>

    <FormButtons>

        <div class="row">
            <div class="col-md-12 text-right">
                @{
                    int id = 0;

                    if (documentData.Id != Guid.Empty)
                    {
                        id = 1;
                    }
                    <FormFooterComponent id="@id" IsSubmitButtonLoading="@isBusySubmitButton" CloseDialogCallBack="@CloseDialog">
                    </FormFooterComponent>
                }
            </div>
        </div>

    </FormButtons>

</TelerikForm>

@if (isDisplayChildPopup)
{
    <CustomPopupComponent Title="@popupTitle"
                      HeaderCssClass=@CustomPopupComponent.GetHeaderCssClass(operationType)
                      CloseOnOutsideClick="false" Width="600px"
                      OnClose="@(()=> {isDisplayPopup = false;})">
        <Body>

            <Web.UI.Pages.Document.DocumentTag.Create CloseDialogCallBack="@CloseChildDialog">

            </Web.UI.Pages.Document.DocumentTag.Create>

        </Body>
    </CustomPopupComponent>
}
