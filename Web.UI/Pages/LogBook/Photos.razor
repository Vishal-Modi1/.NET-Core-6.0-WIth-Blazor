@using DataModels.VM.LogBook
@using Web.UI.Shared.Components.FileUploader;
@using DataModels.Enums;

<style>

    .box-images {
        margin-left: 5px;
        margin-bottom: 10px;
        border: 1px solid black
    }

</style>

<div class="logbook-header d-flex justify-content-between align-items-center my-1" @onclick=@(() => TriggerToggle())>
    <span><FontLabel fontColor="#0D89DD">Flight Photos</FontLabel></span>
    <span>
       @* <FontLabel fontColor="#042455">Configure</FontLabel>*@
        @if (ShowBodyPart)
        {
            <CustomIcons IconName="minus" />
        }
        else
        {
            <CustomIcons IconName="plus" />
        }
    </span>
</div>
<div class="my-1 @(!ShowBodyPart ? "d-none":"")">

    <div style="margin-top:10px;">

        @if (PhotosList.Any())
        {
            int i = 0;
            foreach (LogBookFlightPhotoVM logBookFlightPhotoVM in PhotosList)
            {
                i++;
                string imageText = $"Image {i}";
                <img src='@logBookFlightPhotoVM.ImagePath' alt="@(imageText)" class="k-card-image box-images"
             style="max-height: 100px;max-width: 100px;" />

                <TelerikButton Class="btn k-btn-grid-delete mx-2 flex-fill" ThemeColor="error" ButtonType="@ButtonType.Button" OnClick="()=>OpenDeleteDialog(logBookFlightPhotoVM)">
                    <CustomIcons IconName="grid-delete" PrimaryColor="white"></CustomIcons>
                </TelerikButton>
                @*<CardImage Src="@logBookFlightPhotoVM.ImagePath" Height="100px" Width="100px" Class="box-images"></CardImage>*@
            }
        }

    </div>

    <CustomFileUpload DisplayName="test" OnInputFileChangeCallback="@OnFileChanged"
                      IsFileAdded="false" IsAllowMultiple="true" supportedFormats="@supportedImagesFormats">
    </CustomFileUpload>


</div>

@if (isDisplayPopup)
{
    <CustomPopupComponent Title="@popupTitle"
                      HeaderCssClass=@CustomPopupComponent.GetHeaderCssClass(operationType)
                      CloseOnOutsideClick="false" Width="600px"
                      OnClose="@(()=> {isDisplayPopup = false;})">
        <Body>

            @if (operationType == OperationType.Delete)
            {
                //Delete popup
                <div>
                    <p class="mb-4">Are you sure, You want to delete the image</p>
                    <div class="row" style="text-align:right">
                        <div class="col">

                            <TelerikButton Class="btn k-btn-danger" ButtonType="@ButtonType.Button"  ThemeColor="error" OnClick="()=>DeleteAsync()">
                                Yes
                            </TelerikButton>

                            <TelerikButton Class="btn k-btn-secondary" ThemeColor="secondary" OnClick="()=>isDisplayPopup = false">
                                No
                            </TelerikButton>

                        </div>
                    </div>
                </div>
            }

        </Body>
    </CustomPopupComponent>
}