@using DataModels.Enums
@using DataModels.VM.AircraftEquipment
@using DataModels.VM.Common
@using System.Collections.ObjectModel
@using System.ComponentModel
@using DataModels.VM.Scheduler;
@using DataModels.Entities;
@using DataModels.VM;
@using Web.UI.Shared.Components;
@using Web.UI.Models.Shared;
@using Web.UI.Models.Scheduler;

@page "/SchedulerMobileView1"

@layout BlankLayout
@inject IJSRuntime JSRunTime

<style>
    .k-scheduler .k-event {
        padding: 0px;
    }

    .custom-appointment {
        width: 100%;
        height: 100%;
    }

    .schedule-popup div:hover {
        color: #fff;
        background-color: #000;
        text-decoration: underline;
    }

     .k-scheduler-layout-flex .k-scheduler-cell {
        padding: 10px 0px 10px 0px;
    }
 
    .k-scheduler {
        font-size: 9px;
    }

</style>

<div style="margin:10px;">
    <CustomCollapseBar Class="my-1" IsFilterBarVisible="isFilterBarVisible"
                       OnPanelCollapsed="@(() => {isFilterBarVisible = false;})"
                       OnPanelExpanded="@(() => {isFilterBarVisible = true;})">
        <HeaderContent>
            <div class="d-flex justify-content-between">
                <span class="my-0">
                    <CustomIcons IconName="search" /> Search
                </span>
                <span>
                    @if (isFilterBarVisible)
                    {
                        <CustomIcons IconName="minus" />
                    }
                    else
                    {
                        <CustomIcons IconName="plus" />
                    }
                </span>
            </div>
        </HeaderContent>
        <ChildContent>


            @if (false)
            {
                <div class="row my-2">

                    <div class="col-md-12 col-sm-12">

                        <TelerikComboBox Id=companyId Data="@schedulerFilter.Companies" TextField="Name"
                                     Filterable="true" FilterOperator="@StringFilterOperator.Contains" Class="common-bg"
                                     Placeholder="Select Company" ValueField="Id"
                                     Value="@schedulerFilter.CompanyId"
                                     ValueExpression="@( () => schedulerFilter.CompanyId )"
                                     ValueChanged="@( (int value) => GetAutocompleteData(value) )">
                        </TelerikComboBox>

                    </div>

                </div>
            }

            <div class="row my-2">

                <div class="col-md-12 col-sm-12">

                    <MultiSelectWithAllCheckbox Data="@multiSelectAircraftsList" SelectedData="@selectedAircraftList"
                                                OnChangeEventCallback="@OnAircraftsListChange" PlaceHolderText="Select Aircrafts"
                                                UpdateParentListCallback="@UpdateSelectedAircraftData">
                    </MultiSelectWithAllCheckbox>

                </div>

            </div>

        </ChildContent>
    </CustomCollapseBar>
</div>
<TelerikScheduler Data="@dataSource" Date="@currentDate" Height="600px" View="@currentView"
                  @ref="@scheduleRef"
                  OnItemClick="@OnClickHandlerAsync"
                  OnItemDoubleClick="@OnDoubleClickHandler"
                  AllowCreate="true" AllowDelete="true" AllowUpdate="true"
                  OnEdit="@EditHandler"
                  DateChanged="@DateChangedHandler"
                  IdField="@(nameof(SchedulerVM.Id))"
                  StartField="@(nameof(SchedulerVM.StartTime))"
                  EndField="@(nameof(SchedulerVM.EndTime))"
                  DescriptionField="@(nameof(SchedulerVM.DisplayTitle))"
                  TitleField="@(nameof(SchedulerVM.DisplayTitle))"
                  IsAllDayField="@(nameof(SchedulerVM.IsAllDay))"
                  ViewChanged="@ViewChangedHandler">

    <ItemTemplate>
        @{
            var appt = context as SchedulerVM;

            if (appt.AircraftSchedulerDetailsVM.IsCheckOut)
            {
                appt.Color = "#33ff81";
            }
            else
            {
                if (appt.AircraftSchedulerDetailsVM.CheckInTime != null)
                {
                    appt.Color = "#B8B8B8";
                }
                else
                {
                    appt.Color = "#007bff";
                }
            }

            <div class="custom-appointment schedule-popup"
             title="@appt.DisplayTitle" data-start="@appt.StartTime" data-end="@appt.EndTime"
             data-member1="@appt.Member1"
             style="height:100%;background-color: @appt.Color"
             data-aircraft="@appt.TailNo"
                 @oncontextmenu:preventDefault="true"
                 @oncontextmenu="@( (MouseEventArgs e) => ShowContextMenu(e, appt) )">
                <div style="font-size:12px;background-color: @appt.Color" class="k-event-template">@appt.DisplayTitle</div>
            </div>
        }
    </ItemTemplate>

    <SchedulerResources>
        <SchedulerResource Field="AircraftId" TextField="Text" ValueField="Id" Data="@aircraftsResourceList"></SchedulerResource>
    </SchedulerResources>
    <SchedulerSettings>
        <SchedulerGroupSettings Resources="@resources" Orientation="@SchedulerGroupOrientation.Vertical"></SchedulerGroupSettings>
    </SchedulerSettings>

     <SchedulerViews>
        <SchedulerTimelineView StartTime="@dayStart" EndTime="@dayEnd" WorkDayStart="@workDayStart" WorkDayEnd="@workDayEnd" />
    </SchedulerViews>

</TelerikScheduler>

