@using DataModels.Enums;
@using Web.UI.Pages.Common;
@page "/AircraftDetails"

@inject NavigationManager NavigationManager

<PageTitle>Aircraft Details | Upflyte </PageTitle>

@if (aircraftData != null)
{
    <div class="row my-0">
        <div class="col-12 col-md-12 col-lg-4 col-xl-2 px-1  my-0 @(isLeftBarVisible ? "":"d-none")">
            <div class="card p-0 no-box-shadow">
                <div class="card-body p-0 ">
                    <div>
                        <div class="row d-flex justify-content-center align-items-start w-100 m-0 profile-image-hover" style="height: 150px;border-radius: 5px 5px 0 0;background-color:transparent;border: 0;background-repeat: no-repeat;background-size: 100% 100%;background-image: url('@(aircraftData.ImagePath)'), url('../img/thumbnail-aircraft.png');">
                            <span class="d-flex justify-content-between mt-3 k-cursor-pointer">
                                
                                <TelerikButton Size="xs" Class="btn k-btn-link m-0 p-0 hignlight-hover"
                                           OnClick="@(() => NavigationManager.NavigateTo("/Aircraft"))">
                                    <CustomIcons IconName="share-backward-line" PrimaryColor="#FFF" />
                                </TelerikButton>

                                <label for="filePicker" class="k-cursor-pointer hignlight-hover">
                                    <CustomIcons IconName="edit-square" PrimaryColor="white" />
                                    <InputFile id="filePicker" accept="@supportedImagesFormats" style="display:none" OnChange="@OnInputFileChangeAsync"></InputFile>
                                </label>
                            </span>

                            @*<img src="@aircraftData.ImagePath" onerror="this.onerror=null;this.src='../img/thumbnail-aircraft.png';"
                             style="height: 126px !important;width: 126px !important;border-radius: 100px;border: 5px solid white;padding: 0;position: relative;top: 30px;">*@
                        </div>
                        @*<div class="row bg-white d-flex align-items-end w-100 m-0" style="height: 75px;border-radius: 0 0 7px 7px;">
                            <div class="col-12 text-center">
                                <span>
                                    <b>@aircraftData.TailNo - @(aircraftData.AircraftMakeList?.Where(p => p.Id == aircraftData.AircraftMakeId).FirstOrDefault()?.Name) @(aircraftData.AircraftModelList?.Where(p => p.Id == aircraftData.AircraftModelId).FirstOrDefault()?.Name)</b>
                                </span>
                            </div>
                        </div>*@
                    </div>
                    <hr class="m-0" />
                    <div class="row d-flex justify-content-between d-flex align-items-center  my-1">
                        <div class="d-flex justify-content-around  align-items-center">
                            <span class="mx-2">
                                <CustomIcons IconName="aircraft" PrimaryColor="#3066f8"></CustomIcons>
                                Aircraft information
                            </span>
                            <TelerikButton ThemeColor="info" Class="btn k-btn-primary mx-1 p-1 " Size="xs" OnClick="@(() => AircraftEditDialog())">
                                Update
                            </TelerikButton>
                        </div>
                    </div>

                    <hr class="m-0" />
                    <div>
                        <div class="row p-2 m-0 w-100 ap-value d-flex align-items-top border-0 text-break">
                            <div class="col-6 d-flex justify-content-start"><FontLabel fontColor="#8A8C9B">Tail No</FontLabel></div>
                            <div class="col-6 d-flex justify-content-start"><FontLabel fontColor="#042455">@aircraftData.TailNo</FontLabel></div>
                        </div>
                        <div class="row p-2 m-0 w-100 ap-value d-flex align-items-top border-0 text-break">
                            <div class="col-6 d-flex justify-content-start"><FontLabel fontColor="#8A8C9B">Model</FontLabel></div>
                            <div class="col-6 d-flex justify-content-start"><FontLabel fontColor="#042455">@(aircraftData.AircraftModelList?.Where(p => p.Id == aircraftData.AircraftModelId).FirstOrDefault()?.Name)</FontLabel></div>
                        </div>
                        <div class="row p-2 m-0 w-100 ap-value d-flex align-items-top border-0 text-break">
                            <div class="col-6 d-flex justify-content-start"><FontLabel fontColor="#8A8C9B">Make</FontLabel></div>
                            <div class="col-6 d-flex justify-content-start"><FontLabel fontColor="#042455">@(aircraftData.AircraftMakeList?.Where(p => p.Id == aircraftData.AircraftMakeId).FirstOrDefault()?.Name)</FontLabel></div>
                        </div>
                        <div class="row p-2 m-0 w-100 ap-value d-flex align-items-top border-0 text-break">
                            <div class="col-6 d-flex justify-content-start"><FontLabel fontColor="#8A8C9B">Category</FontLabel></div>
                            <div class="col-6 d-flex justify-content-start"><FontLabel fontColor="#3066F8">@(aircraftData.AircraftCategoryList?.Where(p => p.Id == aircraftData.AircraftCategoryId).FirstOrDefault()?.Name)</FontLabel></div>
                        </div>
                        @if (aircraftData.IsEnginesareTurbines == true)
                        {
                            <div class="row p-2 m-0 w-100 ap-value d-flex align-items-top border-0 text-break">
                                <div class="col-6 d-flex justify-content-start"><FontLabel fontColor="#8A8C9B">Turbines</FontLabel></div>
                                <div class="col-6 d-flex justify-content-start"><FontLabel fontColor="#042455">Available</FontLabel></div>
                            </div>
                        }
                        <div class="row p-2 m-0 w-100 ap-value d-flex align-items-top border-0 text-break">
                            <div class="col-6 d-flex justify-content-start"><FontLabel fontColor="#8A8C9B">Status</FontLabel></div>
                            <div class="col-6 d-flex justify-content-start cursor-pointer">
                                <span @onclick=@(OpenStatusUpdateDialog)>
                                    @(aircraftData.AircraftStatusList?.Where(p => p.Id == aircraftData.AircraftStatusId).FirstOrDefault()?.Name)
                                    <CustomIcons IconName="grid-edit" PrimaryColor="#3066F8"></CustomIcons>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
              
            </div>

            <UpcomingFlights upcomingFlights="@upcomingFlights" IsForAircraft="true"></UpcomingFlights>
           
        </div>
        <div class="col-12 col-md-12 my-0 @(isLeftBarVisible ? "col-lg-8 ps-0 col-xl-10":"col-lg-12")">
            <div class="col-12" @onclick=@(() => ToggleLeftPane())><FontLabel fontColor="#3066F8" fontSize="12px"><CustomIcons IconName="toggle-hamburg"></CustomIcons> Toggle Left Pane</FontLabel></div>
            <div class="card no-box-shadow ">
               
                <Web.UI.Pages.Aircraft.DetailsTabs.Index aircraftData=@aircraftData />
            </div>
        </div>
    </div>

}

@if (isDisplayPopup)
{
    <CustomPopupComponent Title="@popupTitle" 
                      HeaderCssClass=@CustomPopupComponent.GetHeaderCssClass(OperationType.Edit)
                      CloseOnOutsideClick="false" Width="@modelWidth"
                      OnClose="@(()=> {isDisplayPopup = false;})">
        <Body>

            @if (operationType == OperationType.Edit)
            {
                <Create aircraftData=@(aircraftData) CloseDialogCallBack="@CloseDialog"></Create>
            }
            else
            {
                <UpdateStatus aircraftData=@(aircraftData) UpdateStatusCallBack="@UpdateStatus" CloseDialogCallBack="@CloseDialog"></UpdateStatus>
            }

        </Body>
    </CustomPopupComponent>
}
